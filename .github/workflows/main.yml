name: Cached rust build
on: 
  push:

permissions:
  contents: read
  actions: write # require to delete cache

jobs:
  build-and-check-binaries:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # this also does foundry install as it use submodules
          submodules: recursive

      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: musl-dev musl-tools musl-gcc
          version: 1.0

      - run: rustup target add x86_64-unknown-linux-musl

      - uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: true
          cache-on-failure: true
          shared-key: "main_rust_build_cache"

        
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: ðŸ”¨ Build contrcats
        run: forge build --root arcanum-contracts --extra-output-files metadata -o out

      - name: Verify artifact paths
        run: |
          ls -la ${{ github.workspace }}/arcanum-contracts/out/ERC20.sol/

      - name: ðŸ”¨ Build
        id: cargo-building
        run: |
          cargo build --release --target=x86_64-unknown-linux-musl --bin gateway

          #  - name: ðŸ”Ž Test
          #    id: cargo-testing
          #    run: cargo test --release --target=x86_64-unknown-linux-musl -- --nocapture

          #  - name: ðŸ”Ž Formatting check
          #    id: cargo-formatting
          #    run: cargo fmt --all --check

          #  - name: ðŸ”Ž Clippy check
          #    id: cargo-clippy
          #    run: cargo clippy --all-targets --all-features --tests -- -D warnings

      - run: du -sh target
        continue-on-error: true

      - run: du -sh ~/.cargo/registry
        continue-on-error: true

      - run: du -sh target/x86_64-unknown-linux-musl/release
        continue-on-error: true

      - name: Find commit short sha
        id: commitsha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      # build container
      - name: Build the Docker image
        run: |
          docker build --build-arg="BIN=gateway" --tag badconfig/arcanum-gateway:${{ steps.commitsha.outputs.sha_short }} --tag badconfig/arcanum-gateway:latest .

      - name: Login to dockerhub
        run: docker login -u="${{ vars.DOCKER_USERNAME }}" -p="${{ secrets.DOCKER_PASSWORD }}"

      - name: push image
        run: |
          docker push --all-tags badconfig/arcanum-gateway
