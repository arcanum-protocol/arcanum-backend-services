name: Cached rust build
on: 
  push:

env:
  SOLANA_VERSION: v1.16.15

permissions:
  contents: read
  actions: write # require to delete cache

jobs:
  build-and-check-binaries:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # this also does foundry install as it use submodules
          submodules: recursive

      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: musl-dev musl-tools
          version: 1.0

      - run: rustup target add x86_64-unknown-linux-musl

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      # Building project stuff
      - name: âš¡Restore Build Cache
        uses: actions/cache/restore@v4
        id: build-cache
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-rust-cache

      - name: ðŸ”¨ Build
        id: cargo-building
        continue-on-error: true
        run: |
          cargo build --bin multipool-node --release --target=x86_64-unknown-linux-musl

      - name: ðŸ”Ž Test
        id: cargo-testing
        continue-on-error: true
        run: cargo test -- --nocapture

      - name: ðŸ”Ž Formatting check
        id: cargo-formatting
        continue-on-error: true
        run: cargo fmt --all --check

          # - name: ðŸ”Ž Clippy check
          #   id: cargo-clippy
          #   continue-on-error: true
          #   run: cargo clippy --all-targets --all-features --tests -- -D warnings

      - run: du -sh target
        continue-on-error: true

      - run: du -sh ~/.cargo/registry
        continue-on-error: true

      - run: du -sh target/x86_64-unknown-linux-musl/release/multipool-node
        continue-on-error: true

      - name: Delete Previous Cache
        if: ${{ steps.build-cache.outputs.cache-hit }} # github.ref == 'refs/heads/master' 
        continue-on-error: true
        run: |
          gh extension install actions/gh-actions-cache
          gh actions-cache delete "${{ runner.os }}-rust-cache" --confirm
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: âš¡Store Build Cache
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-rust-cache

      - name: Check on failures
        if: steps.cargo-testing.outcome != 'success' || steps.cargo-building.outcome != 'success' || steps.cargo-formatting.outcome != 'success' 
          # || steps.cargo-clippy.outcome != 'success' 
        run: exit 1

      # build container
      - name: Build the Docker image
        run: docker build --tag badconfig/arcanum-node -f node.Dockerfile .

      - name: Login to dockerhub
        run: docker login -u="${{ vars.DOCKER_USERNAME }}" -p="${{ secrets.DOCKER_PASSWORD }}"

      - name: push image
        run: docker push badconfig/arcanum-node 

